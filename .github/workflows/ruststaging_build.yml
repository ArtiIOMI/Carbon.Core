###
### Copyright (c) 2023 Carbon Community 
### All rights reserved
###
name: Rust (Staging) Build
concurrency: build-1-staging

on:
  workflow_dispatch:

jobs:
  bootstrap:
    name: 🥾 Bootstrap
    runs-on: ubuntu-latest

    outputs:
      date:    ${{ steps.step1.outputs.date }}
      clock:   ${{ steps.step1.outputs.clock }}
      tag:     ${{ steps.step1.outputs.tag }}
      ref:     ${{ steps.step1.outputs.ref }}
      wipe:    ${{ steps.step1.outputs.wipe }}
      version: ${{ steps.step1.outputs.version }}

    steps:
      #- name: Log environment
      #  uses: crazy-max/ghaction-dump-context@v1

      - name: 🔗 Checkout source code from github
        uses: actions/checkout@v3
        with:
          ref: rust_beta/staging

      - name: 📅 Prepare the environment
        id: step1
        run: |
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "clock=$(date +'%H:%M:%S')" >> $GITHUB_OUTPUT
          echo "tag=$(date +'%Yd%j')" >> $GITHUB_OUTPUT
          echo "ref=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "wipe=$( [ $(date +%u) -eq 4 ] && [ $(date +%d) -le 7 ] && echo true || echo false )" >> $GITHUB_OUTPUT
          echo "version=$(date +'0.%Y.%q%j.%M%S')" >> $GITHUB_OUTPUT

  # BUILD LINUX ----------------------------------------------------------------
  build-linux:
    name: 🐧 Linux
    needs: bootstrap
    runs-on: ubuntu-latest
    continue-on-error: false

    outputs:
      wipe: ${{ needs.bootstrap.outputs.wipe }}
      artifact: build-staging-${{ needs.bootstrap.outputs.ref }}-linux
      build_info: Built at ${{ needs.bootstrap.outputs.date }} ${{ needs.bootstrap.outputs.clock }} based on commit ${{ needs.bootstrap.outputs.ref }}.
    
    steps:
    - name: 🔗 Checkout source code from github
      uses: actions/checkout@v3
      with:
        ref: rust_beta/staging

    - name: 🛤️ Setup the dotnet build environment
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: 🔨 Setup the Carbon build environment
      shell: bash
      run: |
        ${GITHUB_WORKSPACE}/Tools/Build/linux/bootstrap.sh

    - name: 🐧 Built Carbon on Linux
      shell: bash
      run: |
        export VERSION=${{ needs.bootstrap.outputs.version }}
        ${GITHUB_WORKSPACE}/Tools/Build/linux/build.sh ReleaseUnix
        
    - name: ⬆️ Upload the artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-staging-linux
        path: |
          Release/Carbon.Linux.Release.tar.gz
          Release/Carbon.Linux.Release.info

  # BUILD WINDOWS --------------------------------------------------------------
  build-windows:
    name: 💻 Windows
    needs: bootstrap
    runs-on: windows-latest
    continue-on-error: false
    
    steps:
    - name: 🔗 Checkout source code from github
      uses: actions/checkout@v3
      with:
        ref: rust_beta/staging

    - name: 🛤️ Setup the dotnet build environment
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: 🔨 Setup the Carbon build environment
      shell: cmd
      run: |
        %GITHUB_WORKSPACE%\Tools\Build\win\bootstrap.bat

    - name: 🔨 Built Carbon on Windows
      shell: cmd
      run: |
        set VERSION=${{ needs.bootstrap.outputs.version }}
        %GITHUB_WORKSPACE%\Tools\Build\win\build.bat Release

    - name: ⬆️ Upload the artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-staging-windows
        path: |
          Release/Carbon.Windows.Release.zip
          Release/Carbon.Windows.Release.info

  # RELEASE --------------------------------------------------------------------
  release-on-schedule:
    name: 💾 Staging (Rust) Release
    needs: [ "bootstrap", "build-linux", "build-windows" ]
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push') || (github.event_name == 'workflow_dispatch') || (github.event_name == 'schedule' && needs.build-linux.outputs.wipe == 'true') }}

    steps:
    - name: 🗑️ Delete existing release tag
      uses: dev-drprasad/delete-tag-and-release@92d94d77429cb0436597047a92369526a5824f50
      with:
        delete_release: true
        tag_name: ruststaging_build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 💤 Sleep for 30 seconds
      run: sleep 30s
      shell: bash

    - name: ⬇️ Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: Release/
        
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: Release

    - name: 🏷️ Update release tag
      uses: softprops/action-gh-release@d4e8205d7e959a9107da6396278b2f1f07af0f9b
      with:
        draft: false
        prerelease: false
        tag_name: ruststaging_build
        name: 'Rust (Staging) Build — v${{ needs.bootstrap.outputs.version }}'
        body: |
          This is a release build of Carbon based on the `rust_beta/staging` branch.
          This is a development build.

          ### How to install
          1. Download the `Carbon.[Windows|Linux].Release` archive from the attachments below.
          2. Unzip the archive to the root of your Rust Dedicated Server.
          3. Restart the server and enjoy.
          
          ${{ needs.build-linux.outputs.build_info }}
        files: |
          Release/build-staging-linux/Carbon.Linux.Debug.info
          Release/build-staging-linux/Carbon.Linux.Debug.tar.gz
          Release/build-staging-windows/Carbon.Windows.Debug.info
          Release/build-staging-windows/Carbon.Windows.Debug.zip
