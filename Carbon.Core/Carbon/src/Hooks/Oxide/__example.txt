using System;

namespace Oxide.Plugins
{
    [Info("OxideExample", "kasvoton", "1.0.0")]

    class OxideExample : RustPlugin
    {
        private void InitLogging() => Puts("InitLogging event was triggered");
        private void OnTick() { }
        private void OnPlayerDisconnected() => Puts("OnPlayerDisconnected event was triggered");
        private void OnItemRemovedFromContainer() => Puts("OnItemRemovedFromContainer event was triggered");
        private void OnItemAddedToContainer() => Puts("OnItemAddedToContainer event was triggered");
        private void OnEntitySpawned() => Puts("OnEntitySpawned event was triggered");
        private void CanUseLockedEntity() => Puts("CanUseLockedEntity event was triggered");
        private void OnItemCraft() => Puts("OnItemCraft event was triggered");
        private void OnLootEntity() => Puts("OnLootEntity event was triggered");
        private void OnLootItem() => Puts("OnLootItem event was triggered");
        private void OnEntityEnter() => Puts("OnEntityEnter event was triggered");
        private void OnEntityLeave() => Puts("OnEntityLeave event was triggered");
        private void OnItemDeployed() => Puts("OnItemDeployed event was triggered");
        private void IOnBaseCombatEntityHurt() { }
        private void OnDispenserGather() => Puts("OnDispenserGather event was triggered");
        private void OnPlayerAttack() => Puts("OnPlayerAttack event was triggered");
        private void OnRunPlayerMetabolism() => Puts("OnRunPlayerMetabolism event was triggered");
        private void IOnUserApprove() => Puts("IOnUserApprove event was triggered");
        private void OnStructureUpgrade() => Puts("OnStructureUpgrade event was triggered");
        private void OnStructureDemolish() => Puts("OnStructureDemolish event was triggered");
        private void OnStructureRotate() => Puts("OnStructureRotate event was triggered");
        private void OnFuelConsume() => Puts("OnFuelConsume event was triggered");
        private void CanUpdateSign() => Puts("CanUpdateSign event was triggered");
        private void OnSignLocked() => Puts("OnSignLocked event was triggered");
        private void OnSignUpdated() => Puts("OnSignUpdated event was triggered");
        private void IOnLoseCondition() => Puts("IOnLoseCondition event was triggered");
        private void OnPlayerSleepEnd() => Puts("OnPlayerSleepEnd event was triggered");
        private void OnEntityGroundMissing() => Puts("OnEntityGroundMissing event was triggered");
        private void OnDoorOpened() => Puts("OnDoorOpened event was triggered");
        private void OnDoorClosed() => Puts("OnDoorClosed event was triggered");
        private void OnPlayerTick() => Puts("OnPlayerTick event was triggered");
        private void IOnBasePlayerAttacked() => Puts("IOnBasePlayerAttacked event was triggered");
        private void IOnBasePlayerHurt() => Puts("IOnBasePlayerHurt event was triggered");
        private void OnExplosiveThrown() => Puts("OnExplosiveThrown event was triggered");
        private void OnMeleeThrown() => Puts("OnMeleeThrown event was triggered");
        private void OnItemCraftFinished() => Puts("OnItemCraftFinished event was triggered");
        private void OnHealingItemUse() => Puts("OnHealingItemUse event was triggered");
        private void CanResearchItem() => Puts("CanResearchItem event was triggered");
        private void OnItemResearch() => Puts("OnItemResearch event was triggered");
        private void OnItemResearched() => Puts("OnItemResearched event was triggered");
        private void CanLootPlayer() => Puts("CanLootPlayer event was triggered");
        private void CanBeWounded() => Puts("CanBeWounded event was triggered");
        private void OnRocketLaunched() => Puts("OnRocketLaunched event was triggered");
        private void OnWeaponFired() => Puts("OnWeaponFired event was triggered");
        private void OnItemUse() => Puts("OnItemUse event was triggered");
        private void OnHammerHit() => Puts("OnHammerHit event was triggered");
        private void OnSurveyGather() => Puts("OnSurveyGather event was triggered");
        private void OnAirdrop() => Puts("OnAirdrop event was triggered");
        private void OnStructureRepair() => Puts("OnStructureRepair event was triggered");
        private void OnItemRepair() => Puts("OnItemRepair event was triggered");
        private void OnTrapSnapped() => Puts("OnTrapSnapped event was triggered");
        private void OnTrapDisarm() => Puts("OnTrapDisarm event was triggered");
        private void OnTrapArm() => Puts("OnTrapArm event was triggered");
        private void OnMapImageUpdated() => Puts("OnMapImageUpdated event was triggered");
        private void OnItemCraftCancelled() => Puts("OnItemCraftCancelled event was triggered");
        private void OnResourceDepositCreated() => Puts("OnResourceDepositCreated event was triggered");
        private void OnItemUpgrade() => Puts("OnItemUpgrade event was triggered");
        private void OnCupboardAuthorize() => Puts("OnCupboardAuthorize event was triggered");
        private void OnCupboardDeauthorize() => Puts("OnCupboardDeauthorize event was triggered");
        private void CanNetworkTo() => Puts("CanNetworkTo event was triggered");
        private void OnTurretTarget() => Puts("OnTurretTarget event was triggered");
        private void CanBeTargeted() { }
        private void OnHelicopterTarget() => Puts("OnHelicopterTarget event was triggered");
        private void CanBuild() => Puts("CanBuild event was triggered");
        private void CanEquipItem() => Puts("CanEquipItem event was triggered");
        private void CanWearItem() => Puts("CanWearItem event was triggered");
        private void CanAcceptItem() => Puts("CanAcceptItem event was triggered");
        private void OnPlayerLootEnd() => Puts("OnPlayerLootEnd event was triggered");
        private void OnItemSplit() => Puts("OnItemSplit event was triggered");
        private void OnCupboardClearList() => Puts("OnCupboardClearList event was triggered");
        private void OnLootEntityEnd() => Puts("OnLootEntityEnd event was triggered");
        private void CanCreateWorldProjectile() => Puts("CanCreateWorldProjectile event was triggered");
        private void OnItemPickup() => Puts("OnItemPickup event was triggered");
        private void CanBypassQueue() => Puts("CanBypassQueue event was triggered");
        private void OnEntityKill() => Puts("OnEntityKill event was triggered");
        private void OnPlayerRespawned() => Puts("OnPlayerRespawned event was triggered");
        private void OnMessagePlayer() => Puts("OnMessagePlayer event was triggered");
        private void OnServerMessage() => Puts("OnServerMessage event was triggered");
        private void OnRconConnection() => Puts("OnRconConnection event was triggered");
        private void OnClientAuth() => Puts("OnClientAuth event was triggered");
        private void OnNewSave() => Puts("OnNewSave event was triggered");
        private void IOnServerShutdown() => Puts("IOnServerShutdown event was triggered");
        private void OnSaveLoad() => Puts("OnSaveLoad event was triggered");
        private void OnPlayerSpectate() => Puts("OnPlayerSpectate event was triggered");
        private void OnPlayerSpectateEnd() => Puts("OnPlayerSpectateEnd event was triggered");
        private void OnPlayerHealthChange() => Puts("OnPlayerHealthChange event was triggered");
        private void OnTurretStartup() => Puts("OnTurretStartup event was triggered");
        private void OnTurretShutdown() => Puts("OnTurretShutdown event was triggered");
        private void OnTurretToggle() => Puts("OnTurretToggle event was triggered");
        private void OnPlayerSleep() => Puts("OnPlayerSleep event was triggered");
        private void OnPlayerDeath() => Puts("OnPlayerDeath event was triggered");
        private void OnPlayerRevive() => Puts("OnPlayerRevive event was triggered");
        private void OnOvenToggle() => Puts("OnOvenToggle event was triggered");
        private void OnTrapTrigger() => Puts("OnTrapTrigger event was triggered");
        private void OnTerrainInitialized() => Puts("OnTerrainInitialized event was triggered");
        private void OnFindBurnable() => Puts("OnFindBurnable event was triggered");
        private void CanStackItem() => Puts("CanStackItem event was triggered");
        private void OnExplosiveDropped() => Puts("OnExplosiveDropped event was triggered");
        private void OnBuyVendingItem() => Puts("OnBuyVendingItem event was triggered");
        private void CanUseVending() => Puts("CanUseVending event was triggered");
        private void CanAdministerVending() => Puts("CanAdministerVending event was triggered");
        private void OnRefreshVendingStock() => Puts("OnRefreshVendingStock event was triggered");
        private void OnToggleVendingBroadcast() => Puts("OnToggleVendingBroadcast event was triggered");
        private void OnDeleteVendingOffer() => Puts("OnDeleteVendingOffer event was triggered");
        private void OnOpenVendingAdmin() => Puts("OnOpenVendingAdmin event was triggered");
        private void OnVendingShopOpen() => Puts("OnVendingShopOpen event was triggered");
        private void OnRotateVendingMachine() => Puts("OnRotateVendingMachine event was triggered");
        private void CanPickupEntity() => Puts("CanPickupEntity event was triggered");
        private void OnServerUserSet() => Puts("OnServerUserSet event was triggered");
        private void OnServerSave() => Puts("OnServerSave event was triggered");
        private void OnItemAction() => Puts("OnItemAction event was triggered");
        private void CanAssignBed() => Puts("CanAssignBed event was triggered");
        private void OnCodeEntered() => Puts("OnCodeEntered event was triggered");
        private void CanUnlock() => Puts("CanUnlock event was triggered");
        private void CanLock() => Puts("CanLock event was triggered");
        private void CanChangeCode() => Puts("CanChangeCode event was triggered");
        private void OnRecyclerToggle() => Puts("OnRecyclerToggle event was triggered");
        private void CanRecycle() => Puts("CanRecycle event was triggered");
        private void OnItemRecycle() => Puts("OnItemRecycle event was triggered");
        private void OnTurretDeauthorize() => Puts("OnTurretDeauthorize event was triggered");
        private void CanSetBedPublic() => Puts("CanSetBedPublic event was triggered");
        private void CanCraft() => Puts("CanCraft event was triggered");
        private void CanHelicopterStrafeTarget() => Puts("CanHelicopterStrafeTarget event was triggered");
        private void OnItemDropped() => Puts("OnItemDropped event was triggered");
        private void CanMoveItem() => Puts("CanMoveItem event was triggered");
        private void CanHideStash() => Puts("CanHideStash event was triggered");
        private void CanCombineDroppedItem() => Puts("CanCombineDroppedItem event was triggered");
        private void OnContainerDropItems() => Puts("OnContainerDropItems event was triggered");
        private void CanNpcEat() => Puts("CanNpcEat event was triggered");
        private void OnNpcAttack() => Puts("OnNpcAttack event was triggered");
        private void OnMeleeAttack() => Puts("OnMeleeAttack event was triggered");
        private void OnPlayerViolation() => Puts("OnPlayerViolation event was triggered");
        private void CanChangeGrade() => Puts("CanChangeGrade event was triggered");
        private void CanAffordUpgrade() => Puts("CanAffordUpgrade event was triggered");
        private void CanDemolish() => Puts("CanDemolish event was triggered");
        private void CanUseMailbox() => Puts("CanUseMailbox event was triggered");
        private void OnSpinWheel() => Puts("OnSpinWheel event was triggered");
        private void IOnRconInitialize() => Puts("IOnRconInitialize event was triggered");
        private void OnMaxStackable() => Puts("OnMaxStackable event was triggered");
        private void OnWeaponReload() => Puts("OnWeaponReload event was triggered");
        private void OnMagazineReload() => Puts("OnMagazineReload event was triggered");
        private void OnPlayerRespawn() => Puts("OnPlayerRespawn event was triggered");
        private void CanPickupLock() => Puts("CanPickupLock event was triggered");
        private void OnDispenserBonus() => Puts("OnDispenserBonus event was triggered");
        private void CanVendingAcceptItem() => Puts("CanVendingAcceptItem event was triggered");
        private void OnLiftUse() => Puts("OnLiftUse event was triggered");
        private void OnServerUserRemove() => Puts("OnServerUserRemove event was triggered");
        private void OnPlayerKicked() => Puts("OnPlayerKicked event was triggered");
        private void CanBradleyApcTarget() => Puts("CanBradleyApcTarget event was triggered");
        private void OnBradleyApcInitialize() => Puts("OnBradleyApcInitialize event was triggered");
        private void OnBradleyApcHunt() => Puts("OnBradleyApcHunt event was triggered");
        private void OnBradleyApcPatrol() => Puts("OnBradleyApcPatrol event was triggered");
        private void OnShopCompleteTrade() => Puts("OnShopCompleteTrade event was triggered");
        private void CanHelicopterUseNapalm() => Puts("CanHelicopterUseNapalm event was triggered");
        private void CanHelicopterStrafe() => Puts("CanHelicopterStrafe event was triggered");
        private void CanHelicopterTarget() => Puts("CanHelicopterTarget event was triggered");
        private void CanDismountEntity() => Puts("CanDismountEntity event was triggered");
        private void OnEntityDismounted() => Puts("OnEntityDismounted event was triggered");
        private void CanMountEntity() => Puts("CanMountEntity event was triggered");
        private void OnEntityMounted() => Puts("OnEntityMounted event was triggered");
        private void OnResearchCostDetermine() => Puts("OnResearchCostDetermine event was triggered");
        private void OnLootSpawn() => Puts("OnLootSpawn event was triggered");
        private void CanDropActiveItem() => Puts("CanDropActiveItem event was triggered");
        private void OnPlayerDropActiveItem() => Puts("OnPlayerDropActiveItem event was triggered");
        private void OnTurretClearList() => Puts("OnTurretClearList event was triggered");
        private void OnTurretModeToggle() => Puts("OnTurretModeToggle event was triggered");
        private void OnWorldProjectileCreate() => Puts("OnWorldProjectileCreate event was triggered");
        private void OnActiveItemChange() => Puts("OnActiveItemChange event was triggered");
        private void OnAmmoSwitch() => Puts("OnAmmoSwitch event was triggered");
        private void OnPlayerVoice() => Puts("OnPlayerVoice event was triggered");
        private void CanLootEntity() => Puts("CanLootEntity event was triggered");
        private void OnEntityBuilt() => Puts("OnEntityBuilt event was triggered");
        private void OnDoorKnocked() => Puts("OnDoorKnocked event was triggered");
        private void OnPlayerInput() => Puts("OnPlayerInput event was triggered");
        private void IOnNpcTarget() => Puts("IOnNpcTarget event was triggered");
        private void CanHackCrate() => Puts("CanHackCrate event was triggered");
        private void OnCrateHack() => Puts("OnCrateHack event was triggered");
        private void OnCrateHackEnd() => Puts("OnCrateHackEnd event was triggered");
        private void OnCrateLanded() => Puts("OnCrateLanded event was triggered");
        private void OnCrateDropped() => Puts("OnCrateDropped event was triggered");
        private void OnExperimentStart() => Puts("OnExperimentStart event was triggered");
        private void CanHelicopterDropCrate() => Puts("CanHelicopterDropCrate event was triggered");
        private void OnHelicopterDropCrate() => Puts("OnHelicopterDropCrate event was triggered");
        private void OnHelicopterAttack() => Puts("OnHelicopterAttack event was triggered");
        private void OnEntityDestroy() => Puts("OnEntityDestroy event was triggered");
        private void OnHelicopterOutOfCrates() => Puts("OnHelicopterOutOfCrates event was triggered");
        private void OnHelicopterDropDoorOpen() => Puts("OnHelicopterDropDoorOpen event was triggered");
        private void CanRenameBed() => Puts("CanRenameBed event was triggered");
        private void OnAddVendingOffer() => Puts("OnAddVendingOffer event was triggered");
        private void OnLootPlayer() => Puts("OnLootPlayer event was triggered");
        private void OnFlameThrowerBurn() => Puts("OnFlameThrowerBurn event was triggered");
        private void OnFireBallDamage() => Puts("OnFireBallDamage event was triggered");
        private void OnFireBallSpread() => Puts("OnFireBallSpread event was triggered");
        private void OnPlayerMetabolize() => Puts("OnPlayerMetabolize event was triggered");
        private void OnEntityMarkHostile() => Puts("OnEntityMarkHostile event was triggered");
        private void CanEntityBeHostile() => Puts("CanEntityBeHostile event was triggered");
        private void OnItemRemove() => Puts("OnItemRemove event was triggered");
        private void ICanPickupEntity() => Puts("ICanPickupEntity event was triggered");
        private void OnTeamCreate() => Puts("OnTeamCreate event was triggered");
        private void OnTeamInvite() => Puts("OnTeamInvite event was triggered");
        private void OnTeamRejectInvite() => Puts("OnTeamRejectInvite event was triggered");
        private void OnTeamPromote() => Puts("OnTeamPromote event was triggered");
        private void OnTeamLeave() => Puts("OnTeamLeave event was triggered");
        private void OnTeamKick() => Puts("OnTeamKick event was triggered");
        private void OnTeamAcceptInvite() => Puts("OnTeamAcceptInvite event was triggered");
        private void OnTeamDisband() => Puts("OnTeamDisband event was triggered");
        private void OnTeamCreated() => Puts("OnTeamCreated event was triggered");
        private void OnTeamDisbanded() => Puts("OnTeamDisbanded event was triggered");
        private void OnPlayerLand() => Puts("OnPlayerLand event was triggered");
        private void OnPlayerLanded() => Puts("OnPlayerLanded event was triggered");
        private void CanDeployItem() => Puts("CanDeployItem event was triggered");
        private void CanSamSiteShoot() => Puts("CanSamSiteShoot event was triggered");
        private void OnWorldPrefabSpawned() => Puts("OnWorldPrefabSpawned event was triggered");
        private void OnBoatPathGenerate() => Puts("OnBoatPathGenerate event was triggered");
        private void OnCollectiblePickup() => Puts("OnCollectiblePickup event was triggered");
        private void OnProjectileRicochet() => Puts("OnProjectileRicochet event was triggered");
        private void CanAffordToPlace() => Puts("CanAffordToPlace event was triggered");
        private void CanSpectateTarget() => Puts("CanSpectateTarget event was triggered");
        private void OnSwitchToggle() => Puts("OnSwitchToggle event was triggered");
        private void OnShopAcceptClick() => Puts("OnShopAcceptClick event was triggered");
        private void OnShopCancelClick() => Puts("OnShopCancelClick event was triggered");
        private void OnGiveSoldItem() => Puts("OnGiveSoldItem event was triggered");
        private void CanTakeCutting() => Puts("CanTakeCutting event was triggered");
        private void OnSendCommand() => Puts("OnSendCommand event was triggered");
        private void OnBroadcastCommand() => Puts("OnBroadcastCommand event was triggered");
        private void OnVendingShopRename() => Puts("OnVendingShopRename event was triggered");
        private void OnNpcGiveSoldItem() => Puts("OnNpcGiveSoldItem event was triggered");
        private void OnExcavatorGather() => Puts("OnExcavatorGather event was triggered");
        private void OnEntityTakeDamage() => Puts("OnEntityTakeDamage event was triggered");
        private void OnSupplyDropLanded() => Puts("OnSupplyDropLanded event was triggered");
        private void OnHelicopterStrafeEnter() => Puts("OnHelicopterStrafeEnter event was triggered");
        private void OnPlayerSetInfo() => Puts("OnPlayerSetInfo event was triggered");
        private void OnTakeCurrencyItem() => Puts("OnTakeCurrencyItem event was triggered");
        private void OnEntityStabilityCheck() => Puts("OnEntityStabilityCheck event was triggered");
        private void OnPayForUpgrade() => Puts("OnPayForUpgrade event was triggered");
        private void OnPayForPlacement() => Puts("OnPayForPlacement event was triggered");
        private void OnEntityDeath() => Puts("OnEntityDeath event was triggered");
        private void OnTeamUpdate() => Puts("OnTeamUpdate event was triggered");
        private void OnTeamUpdated() { }
        private void OnExplosiveFuseSet() => Puts("OnExplosiveFuseSet event was triggered");
        private void OnPlayerAssist() => Puts("OnPlayerAssist event was triggered");
        private void OnPlayerKeepAlive() => Puts("OnPlayerKeepAlive event was triggered");
        private void OnExcavatorMiningToggled() => Puts("OnExcavatorMiningToggled event was triggered");
        private void OnExcavatorResourceSet() => Puts("OnExcavatorResourceSet event was triggered");
        private void OnDieselEngineToggled() => Puts("OnDieselEngineToggled event was triggered");
        private void OnDieselEngineToggle() => Puts("OnDieselEngineToggle event was triggered");
        private void OnActiveItemChanged() => Puts("OnActiveItemChanged event was triggered");
        private void OnAmmoUnload() => Puts("OnAmmoUnload event was triggered");
        private void OnOutputUpdate() => Puts("OnOutputUpdate event was triggered");
        private void OnInputUpdate() => Puts("OnInputUpdate event was triggered");
        private void OnCardSwipe() => Puts("OnCardSwipe event was triggered");
        private void OnButtonPress() => Puts("OnButtonPress event was triggered");
        private void OnMapMarkersClear() => Puts("OnMapMarkersClear event was triggered");
        private void OnMapMarkersCleared() => Puts("OnMapMarkersCleared event was triggered");
        private void OnPlayerReported() => Puts("OnPlayerReported event was triggered");
        private void IOnPlayerCommand() => Puts("IOnPlayerCommand event was triggered");
        private void IOnPlayerChat() => Puts("IOnPlayerChat event was triggered");
        private void OnWireConnect() => Puts("OnWireConnect event was triggered");
        private void OnWireClear() => Puts("OnWireClear event was triggered");
        private void CanUseWires() => Puts("CanUseWires event was triggered");
        private void OnHorseLead() => Puts("OnHorseLead event was triggered");
        private void OnPhoneNameUpdate() => Puts("OnPhoneNameUpdate event was triggered");
        private void OnBuildingPrivilege() => Puts("OnBuildingPrivilege event was triggered");
        private void OnHelicopterRetire() => Puts("OnHelicopterRetire event was triggered");
        private void OnCupboardProtectionCalculated() => Puts("OnCupboardProtectionCalculated event was triggered");
        private void OnCargoShipEgress() => Puts("OnCargoShipEgress event was triggered");
        private void OnCargoShipSpawnCrate() => Puts("OnCargoShipSpawnCrate event was triggered");
        private void OnNpcRadioChatter() => Puts("OnNpcRadioChatter event was triggered");
        private void OnNpcAlert() => Puts("OnNpcAlert event was triggered");
        private void OnNpcEquipWeapon() => Puts("OnNpcEquipWeapon event was triggered");
        private void OnNpcDuck() => Puts("OnNpcDuck event was triggered");
        private void OnPlayerWantsDismount() => Puts("OnPlayerWantsDismount event was triggered");
        private void OnPlayerWantsMount() => Puts("OnPlayerWantsMount event was triggered");
        private void OnPlayerStudyBlueprint() => Puts("OnPlayerStudyBlueprint event was triggered");
        private void IOnPlayerConnected() => Puts("IOnPlayerConnected event was triggered");
        private void OnBuildingSplit() => Puts("OnBuildingSplit event was triggered");
        private void OnMapMarkerRemove() => Puts("OnMapMarkerRemove event was triggered");
        private void OnGrowableGathered() => Puts("OnGrowableGathered event was triggered");
        private void OnQuarryConsumeFuel() => Puts("OnQuarryConsumeFuel event was triggered");
        private void OnEntityActiveCheck() => Puts("OnEntityActiveCheck event was triggered");
        private void OnEntityFromOwnerCheck() => Puts("OnEntityFromOwnerCheck event was triggered");
        private void OnEntityVisibilityCheck() => Puts("OnEntityVisibilityCheck event was triggered");
        private void OnEntityDistanceCheck() => Puts("OnEntityDistanceCheck event was triggered");
        private void OnGrowableGather() => Puts("OnGrowableGather event was triggered");
        private void OnCorpsePopulate() => Puts("OnCorpsePopulate event was triggered");
        private void OnItemSkinChange() => Puts("OnItemSkinChange event was triggered");
        private void OnMapMarkerAdded() => Puts("OnMapMarkerAdded event was triggered");
        private void OnClothingItemChanged() => Puts("OnClothingItemChanged event was triggered");
        private void OnHorseHitch() => Puts("OnHorseHitch event was triggered");
        private void OnHorseUnhitch() => Puts("OnHorseUnhitch event was triggered");
        private void OnEventTrigger() => Puts("OnEventTrigger event was triggered");
        private void OnVehiclePush() => Puts("OnVehiclePush event was triggered");
        private void OnStashHidden() => Puts("OnStashHidden event was triggered");
        private void OnMixingTableToggle() => Puts("OnMixingTableToggle event was triggered");
        private void OnBookmarkControl() => Puts("OnBookmarkControl event was triggered");
        private void OnBookmarkDelete() => Puts("OnBookmarkDelete event was triggered");
        private void OnBookmarkAdd() => Puts("OnBookmarkAdd event was triggered");
        private void OnBookmarksSendControl() => Puts("OnBookmarksSendControl event was triggered");
        private void OnBookmarkControlEnd() => Puts("OnBookmarkControlEnd event was triggered");
        private void OnSolarPanelSunUpdate() => Puts("OnSolarPanelSunUpdate event was triggered");
        private void OnServerInitialize() => Puts("OnServerInitialize event was triggered");
        private void OnDefaultItemsReceive() => Puts("OnDefaultItemsReceive event was triggered");
        private void OnDefaultItemsReceived() => Puts("OnDefaultItemsReceived event was triggered");
        private void IOnPlayerBanned() => Puts("IOnPlayerBanned event was triggered");
        private void OnBonusItemDrop() => Puts("OnBonusItemDrop event was triggered");
        private void OnPlayerCorpseSpawned() => Puts("OnPlayerCorpseSpawned event was triggered");
        private void OnItemRefill() => Puts("OnItemRefill event was triggered");
        private void OnRfListenerAdd() => Puts("OnRfListenerAdd event was triggered");
        private void OnRfListenerRemove() => Puts("OnRfListenerRemove event was triggered");
        private void OnRfBroadcasterAdd() => Puts("OnRfBroadcasterAdd event was triggered");
        private void OnRfBroadcasterRemove() => Puts("OnRfBroadcasterRemove event was triggered");
        private void OnRfBroadcasterAdded() => Puts("OnRfBroadcasterAdded event was triggered");
        private void OnRfListenerRemoved() => Puts("OnRfListenerRemoved event was triggered");
        private void OnRfListenerAdded() => Puts("OnRfListenerAdded event was triggered");
        private void OnRfBroadcasterRemoved() => Puts("OnRfBroadcasterRemoved event was triggered");
        private void OnRfFrequencyChange() => Puts("OnRfFrequencyChange event was triggered");
        private void OnRfFrequencyChanged() => Puts("OnRfFrequencyChanged event was triggered");
        private void OnBonusItemDropped() => Puts("OnBonusItemDropped event was triggered");
        private void OnRemoveDying() => Puts("OnRemoveDying event was triggered");
        private void OnSleepingBagDestroyed() => Puts("OnSleepingBagDestroyed event was triggered");
        private void OnAnalysisComplete() => Puts("OnAnalysisComplete event was triggered");
        private void OnBookmarkInput() => Puts("OnBookmarkInput event was triggered");
        private void IOnServerInitialized() => Puts("IOnServerInitialized event was triggered");
        private void OnEntityControl() => Puts("OnEntityControl event was triggered");
        private void OnTurretRotate() => Puts("OnTurretRotate event was triggered");
        private void OnSwitchToggled() => Puts("OnSwitchToggled event was triggered");
        private void OnEngineStatsRefresh() => Puts("OnEngineStatsRefresh event was triggered");
        private void OnEngineStatsRefreshed() => Puts("OnEngineStatsRefreshed event was triggered");
        private void OnVehicleModulesAssign() => Puts("OnVehicleModulesAssign event was triggered");
        private void OnVehicleModulesAssigned() => Puts("OnVehicleModulesAssigned event was triggered");
        private void OnVehicleModuleSelect() => Puts("OnVehicleModuleSelect event was triggered");
        private void OnVehicleModuleSelected() => Puts("OnVehicleModuleSelected event was triggered");
        private void OnVehicleModuleDeselected() => Puts("OnVehicleModuleDeselected event was triggered");
        private void OnNpcConversationStart() => Puts("OnNpcConversationStart event was triggered");
        private void OnNpcConversationRespond() => Puts("OnNpcConversationRespond event was triggered");
        private void OnNpcConversationResponded() => Puts("OnNpcConversationResponded event was triggered");
        private void OnVehicleLockableCheck() => Puts("OnVehicleLockableCheck event was triggered");
        private void OnElevatorCall() => Puts("OnElevatorCall event was triggered");
        private void OnHotAirBalloonToggle() => Puts("OnHotAirBalloonToggle event was triggered");
        private void OnHotAirBalloonToggled() => Puts("OnHotAirBalloonToggled event was triggered");
        private void OnEngineLoadoutRefresh() => Puts("OnEngineLoadoutRefresh event was triggered");
        private void OnReactiveTargetReset() => Puts("OnReactiveTargetReset event was triggered");
        private void OnExperimentStarted() => Puts("OnExperimentStarted event was triggered");
        private void OnExperimentEnd() => Puts("OnExperimentEnd event was triggered");
        private void OnExperimentEnded() => Puts("OnExperimentEnded event was triggered");
        private void OnVehicleModuleMove() => Puts("OnVehicleModuleMove event was triggered");
        private void CanSwapToSeat() => Puts("CanSwapToSeat event was triggered");
        private void OnRidableAnimalClaim() => Puts("OnRidableAnimalClaim event was triggered");
        private void OnRidableAnimalClaimed() => Puts("OnRidableAnimalClaimed event was triggered");
        private void OnPhoneNameUpdated() => Puts("OnPhoneNameUpdated event was triggered");
        private void IOnEntitySaved() => Puts("IOnEntitySaved event was triggered");
        private void OnEntitySnapshot() => Puts("OnEntitySnapshot event was triggered");
        private void OnNetworkGroupEntered() => Puts("OnNetworkGroupEntered event was triggered");
        private void OnNetworkGroupLeft() => Puts("OnNetworkGroupLeft event was triggered");
        private void OnDemoRecordingStart() => Puts("OnDemoRecordingStart event was triggered");
        private void OnDemoRecordingStarted() => Puts("OnDemoRecordingStarted event was triggered");
        private void OnDemoRecordingStop() => Puts("OnDemoRecordingStop event was triggered");
        private void OnDemoRecordingStopped() => Puts("OnDemoRecordingStopped event was triggered");
        private void OnOvenCook() => Puts("OnOvenCook event was triggered");
        private void OnOvenCooked() => Puts("OnOvenCooked event was triggered");
        private void OnFuelConsumed() => Puts("OnFuelConsumed event was triggered");
        private void OnFuelAmountCheck() { }
        private void OnFuelItemCheck() { }
        private void OnFuelCheck() { }
        private void CanCheckFuel() => Puts("CanCheckFuel event was triggered");
        private void CanUseFuel() => Puts("CanUseFuel event was triggered");
        private void CanUnlockTechTreeNode() => Puts("CanUnlockTechTreeNode event was triggered");
        private void CanUnlockTechTreeNodePath() => Puts("CanUnlockTechTreeNodePath event was triggered");
        private void OnIORefCleared() => Puts("OnIORefCleared event was triggered");
        private void OnTechTreeNodeUnlock() => Puts("OnTechTreeNodeUnlock event was triggered");
        private void OnTechTreeNodeUnlocked() => Puts("OnTechTreeNodeUnlocked event was triggered");
        private void OnPhoneAnswer() => Puts("OnPhoneAnswer event was triggered");
        private void OnPhoneCallStart() => Puts("OnPhoneCallStart event was triggered");
        private void OnPhoneCallStarted() => Puts("OnPhoneCallStarted event was triggered");
        private void CanReceiveCall() => Puts("CanReceiveCall event was triggered");
        private void OnPhoneDial() => Puts("OnPhoneDial event was triggered");
        private void OnPhoneDialFail() => Puts("OnPhoneDialFail event was triggered");
        private void OnPhoneDialTimeout() => Puts("OnPhoneDialTimeout event was triggered");
        private void OnPhoneDialFailed() => Puts("OnPhoneDialFailed event was triggered");
        private void OnPhoneDialTimedOut() => Puts("OnPhoneDialTimedOut event was triggered");
        private void OnPhoneAnswered() => Puts("OnPhoneAnswered event was triggered");
        private void OnInventoryNetworkUpdate() => Puts("OnInventoryNetworkUpdate event was triggered");
        private void OnEntityFlagsNetworkUpdate() => Puts("OnEntityFlagsNetworkUpdate event was triggered");
        private void OnLootNetworkUpdate() => Puts("OnLootNetworkUpdate event was triggered");
        private void OnVendingTransaction() => Puts("OnVendingTransaction event was triggered");
        private void OnFindSpawnPoint() => Puts("OnFindSpawnPoint event was triggered");
        private void OnNpcConversationEnded() => Puts("OnNpcConversationEnded event was triggered");
        private void OnBookmarkControlStarted() => Puts("OnBookmarkControlStarted event was triggered");
        private void OnBookmarkControlEnded() => Puts("OnBookmarkControlEnded event was triggered");
        private void OnCargoPlaneSignaled() => Puts("OnCargoPlaneSignaled event was triggered");
        private void OnSupplyDropDropped() => Puts("OnSupplyDropDropped event was triggered");
        private void OnItemSubmit() => Puts("OnItemSubmit event was triggered");
        private void OnItemStacked() => Puts("OnItemStacked event was triggered");
        private void OnThreatLevelUpdate() => Puts("OnThreatLevelUpdate event was triggered");
        private void OnWaterPurify() => Puts("OnWaterPurify event was triggered");
        private void OnWaterPurified() => Puts("OnWaterPurified event was triggered");
        private void CanUseGesture() => Puts("CanUseGesture event was triggered");
        private void OnClientDisconnect() => Puts("OnClientDisconnect event was triggered");
        private void OnIngredientsCollect() => Puts("OnIngredientsCollect event was triggered");
        private void OnRespawnInformationGiven() => Puts("OnRespawnInformationGiven event was triggered");
        private void OnClientCommand() => Puts("OnClientCommand event was triggered");
        private void OnSleepingBagValidCheck() => Puts("OnSleepingBagValidCheck event was triggered");
        private void OnWaterCollect() => Puts("OnWaterCollect event was triggered");
        private void OnLiquidVesselFill() => Puts("OnLiquidVesselFill event was triggered");
        private void OnCCTVDirectionChange() => Puts("OnCCTVDirectionChange event was triggered");
        private void CanSetRelationship() => Puts("CanSetRelationship event was triggered");
        private void OnPlayerRecover() => Puts("OnPlayerRecover event was triggered");
        private void OnPlayerWound() => Puts("OnPlayerWound event was triggered");
        private void OnPlayerRecovered() => Puts("OnPlayerRecovered event was triggered");
        private void OnPlayerDismountFailed() => Puts("OnPlayerDismountFailed event was triggered");
        private void CanAccessVendingMachine() => Puts("CanAccessVendingMachine event was triggered");
        private void OnDecayHeal() { }
        private void OnDecayDamage() { }
        private void OnWindmillUpdate() => Puts("OnWindmillUpdate event was triggered");
        private void OnWindmillUpdated() => Puts("OnWindmillUpdated event was triggered");
        private void CanElevatorLiftMove() => Puts("CanElevatorLiftMove event was triggered");
        private void OnGrowableStateChange() => Puts("OnGrowableStateChange event was triggered");
        private void CanBeRecycled() => Puts("CanBeRecycled event was triggered");
        private void OnEntityPickedUp() => Puts("OnEntityPickedUp event was triggered");
        private void OnServerRestartInterrupt() => Puts("OnServerRestartInterrupt event was triggered");
        private void OnServerRestart() => Puts("OnServerRestart event was triggered");
        private void CanUseHelicopter() => Puts("CanUseHelicopter event was triggered");
        private void OnWildlifeTrap() => Puts("OnWildlifeTrap event was triggered");
        private void OnFishingStopped() => Puts("OnFishingStopped event was triggered");
        private void OnFishingRodCast() => Puts("OnFishingRodCast event was triggered");
        private void OnTurretAuthorize() => Puts("OnTurretAuthorize event was triggered");
        private void OnFishCaught() => Puts("OnFishCaught event was triggered");
        private void OnPlayerDrink() => Puts("OnPlayerDrink event was triggered");
        private void CanPurchaseItem() => Puts("CanPurchaseItem event was triggered");
        private void OnTurretAssign() => Puts("OnTurretAssign event was triggered");
        private void OnTurretAssigned() => Puts("OnTurretAssigned event was triggered");
        private void OnMissionFailed() => Puts("OnMissionFailed event was triggered");
        private void OnMissionSucceeded() => Puts("OnMissionSucceeded event was triggered");
        private void OnMissionStart() => Puts("OnMissionStart event was triggered");
        private void CanAssignMission() => Puts("CanAssignMission event was triggered");
        private void OnMissionAssigned() => Puts("OnMissionAssigned event was triggered");
        private void OnMissionStarted() => Puts("OnMissionStarted event was triggered");
        private void OnFlameExplosion() => Puts("OnFlameExplosion event was triggered");
        private void OnEyePosValidate() => Puts("OnEyePosValidate event was triggered");
        private void OnImpactEffectCreate() => Puts("OnImpactEffectCreate event was triggered");
        private void OnItemUnwrap() => Puts("OnItemUnwrap event was triggered");
        private void OnXmasLootDistribute() => Puts("OnXmasLootDistribute event was triggered");
        private void OnXmasStockingFill() => Puts("OnXmasStockingFill event was triggered");
        private void OnBradleyApcThink() => Puts("OnBradleyApcThink event was triggered");
        private void OnTerrainCreate() => Puts("OnTerrainCreate event was triggered");
        private void OnPlayerColliderEnable() => Puts("OnPlayerColliderEnable event was triggered");
        private void OnPlayerSleepEnded() => Puts("OnPlayerSleepEnded event was triggered");
        private void OnExcavatorSuppliesRequest() => Puts("OnExcavatorSuppliesRequest event was triggered");
        private void OnExcavatorSuppliesRequested() => Puts("OnExcavatorSuppliesRequested event was triggered");
        private void OnClientProjectileEffectCreate() => Puts("OnClientProjectileEffectCreate event was triggered");
        private void CanDesignFirework() => Puts("CanDesignFirework event was triggered");
        private void OnFireworkStarted() => Puts("OnFireworkStarted event was triggered");
        private void OnFireworkExhausted() => Puts("OnFireworkExhausted event was triggered");
        private void OnFireworkDamage() => Puts("OnFireworkDamage event was triggered");
        private void OnFireworkDesignChange() => Puts("OnFireworkDesignChange event was triggered");
        private void OnFireworkDesignChanged() => Puts("OnFireworkDesignChanged event was triggered");
        private void OnServerInformationUpdated() => Puts("OnServerInformationUpdated event was triggered");
        private void OnMlrsFire() => Puts("OnMlrsFire event was triggered");
        private void OnMlrsFired() => Puts("OnMlrsFired event was triggered");
        private void OnMlrsRocketFired() => Puts("OnMlrsRocketFired event was triggered");
        private void OnMlrsFiringEnded() => Puts("OnMlrsFiringEnded event was triggered");
        private void OnMlrsTarget() => Puts("OnMlrsTarget event was triggered");
        private void OnMlrsTargetSet() => Puts("OnMlrsTargetSet event was triggered");
        private void OnEntityReskin() => Puts("OnEntityReskin event was triggered");
        private void OnEntityReskinned() => Puts("OnEntityReskinned event was triggered");
        private void OnConnectionDequeue() => Puts("OnConnectionDequeue event was triggered");
        private void OnConnectionQueue() => Puts("OnConnectionQueue event was triggered");
        private void OnQueueMessage() => Puts("OnQueueMessage event was triggered");
        private void OnQueueCycle() { }
        private void OnSprinklerSplashed() => Puts("OnSprinklerSplashed event was triggered");
        private void CanWaterBallSplash() => Puts("CanWaterBallSplash event was triggered");
        private void CanFireLiquidWeapon() => Puts("CanFireLiquidWeapon event was triggered");
        private void OnLiquidWeaponFired() => Puts("OnLiquidWeaponFired event was triggered");
        private void OnLiquidWeaponFiringStopped() => Puts("OnLiquidWeaponFiringStopped event was triggered");
        private void OnPhotoCapture() => Puts("OnPhotoCapture event was triggered");
        private void OnPhotoCaptured() => Puts("OnPhotoCaptured event was triggered");
        private void OnNpcTargetSense() { }
        private void OnTreeMarkerHit() => Puts("OnTreeMarkerHit event was triggered");
        private void OnNetworkSubscriptionsGather() => Puts("OnNetworkSubscriptionsGather event was triggered");
        private void OnVendingShopOpened() => Puts("OnVendingShopOpened event was triggered");
        private void OnAdventGiftAward() => Puts("OnAdventGiftAward event was triggered");
        private void OnAdventGiftAwarded() => Puts("OnAdventGiftAwarded event was triggered");
        private void OnItemPainted() => Puts("OnItemPainted event was triggered");
        private void OnItemRecycleAmount() => Puts("OnItemRecycleAmount event was triggered");
        private void OnTrainCarUncouple() => Puts("OnTrainCarUncouple event was triggered");
        private void CanTrainCarCouple() => Puts("CanTrainCarCouple event was triggered");
        private void OnSamSiteModeToggle() => Puts("OnSamSiteModeToggle event was triggered");
        private void OnSprayCreate() => Puts("OnSprayCreate event was triggered");
        private void OnLockerSwap() => Puts("OnLockerSwap event was triggered");
        private void OnWeaponModChange() => Puts("OnWeaponModChange event was triggered");
        private void OnSprayRemove() => Puts("OnSprayRemove event was triggered");
        private void OnHelicopterAttacked() => Puts("OnHelicopterAttacked event was triggered");
        private void OnComposterUpdate() => Puts("OnComposterUpdate event was triggered");
        private void OnInventoryItemsCount() => Puts("OnInventoryItemsCount event was triggered");
        private void OnInventoryItemsTake() => Puts("OnInventoryItemsTake event was triggered");
        private void OnInventoryItemsFind() => Puts("OnInventoryItemsFind event was triggered");
        private void OnInventoryAmmoFind() => Puts("OnInventoryAmmoFind event was triggered");
        private void OnDroppedItemCombined() => Puts("OnDroppedItemCombined event was triggered");
        private void OnRemoteIdentifierUpdate() => Puts("OnRemoteIdentifierUpdate event was triggered");
        private void OnOvenStart() => Puts("OnOvenStart event was triggered");
        private void OnOvenStarted() => Puts("OnOvenStarted event was triggered");
        private void OnPlayerBanned() => Puts("OnPlayerBanned event was triggered");
        private void OnOvenTemperature() => Puts("OnOvenTemperature event was triggered");
        private void OnBuildingMerge() => Puts("OnBuildingMerge event was triggered");
        private void OnFeedbackReported() => Puts("OnFeedbackReported event was triggered");
        private void OnPortalUse() => Puts("OnPortalUse event was triggered");
        private void IOnServerCommand() => Puts("IOnServerCommand event was triggered");
        private void IOnRunCommandLine() => Puts("IOnRunCommandLine event was triggered");
        private void OnClientDisconnected() => Puts("OnClientDisconnected event was triggered");

    }
}