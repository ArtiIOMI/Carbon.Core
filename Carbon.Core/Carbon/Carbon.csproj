<Project Sdk="Microsoft.NET.Sdk" DefaultTargets="Build">
  <PropertyGroup>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <TargetFrameworks>net48</TargetFrameworks>

    <Deterministic>true</Deterministic>
    <FileAlignment>512</FileAlignment>
    <OutputType>Library</OutputType>

    <ProjectGuid>{DB7AC4B9-E0F3-4E8F-B977-DD32709359A4}</ProjectGuid>
    <Configurations>Debug;Release;ReleaseUnix;DebugUnix</Configurations>
  </PropertyGroup>

  <PropertyGroup>
    <Product>Carbon</Product>
    <AssemblyName>Carbon</AssemblyName>
    <Version>1.$([System.DateTime]::UtcNow.ToString('yy.ddMM')).10</Version>

    <Company>Raul-Sorin Sorban</Company>
    <Copyright>Copyright Â© Carbon 2022</Copyright>
    <PackageProjectUrl>https://discord.gg/eXPcNKK4yd</PackageProjectUrl>
    <RepositoryUrl>https://github.com/Carbon-Modding/Carbon.Core</RepositoryUrl>
    <Description>A very lightweight version of Oxide, all working within Harmony's environment.</Description>
  </PropertyGroup>

  <PropertyGroup>
    <VersionPrefix>$([System.DateTime]::UtcNow.ToString("yyyy.MM.dd.HHmm"))</VersionPrefix>
    <VersionSuffix>$(Configuration)</VersionSuffix>

    <InformationalVersion>$(VersionPrefix)-$(VersionSuffix)</InformationalVersion>
    <AssemblyVersion>$(Version)</AssemblyVersion>
    <FileVersion>$(VersionPrefix)</FileVersion>
    <RootNamespace>$(MSBuildProjectName.Replace(" ", "_")).Core</RootNamespace>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <DefineConstants>DEBUG;TRACE;WIN</DefineConstants>
    <OutputPath>bin\Debug\</OutputPath>
    <DebugType>embedded</DebugType>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'DebugUnix'">
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <DefineConstants>DEBUG;TRACE;UNIX</DefineConstants>
    <OutputPath>bin\DebugUnix\</OutputPath>
    <DebugType>embedded</DebugType>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <DefineConstants>WIN</DefineConstants>
    <OutputPath>bin\Release\</OutputPath>
    <DebugType>none</DebugType>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'ReleaseUnix'">
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <DefineConstants>UNIX</DefineConstants>
    <OutputPath>bin\ReleaseUnix\</OutputPath>
    <DebugType>none</DebugType>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Core" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data" />
    <Reference Include="System.Drawing.Design" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.IO.Compression.FileSystem" />
    <Reference Include="System.Xml" />
    <Reference Include="System" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="..\..\External\*.dll" />
    <Reference Include="..\..\Rust\RustDedicated_Data\Managed\*.dll">
      <PrivateAssets>all</PrivateAssets>
      <SpecificVersion>false</SpecificVersion>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Costura.Fody" Version="5.7.0">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="protobuf-net" Version="3.1.17" />
    <PackageReference Include="protobuf-net.Core" Version="3.1.17" />
  </ItemGroup>

  <Target Name="CleanOutput" AfterTargets="Clean">
    <Delete Files="$(OutputPath)Carbon.dll" />
    <Delete Files="$(OutputPath)$(TargetName).dll" />
  </Target>

  <Target Name="CustomPrepareForBuild" AfterTargets="_GenerateRestoreProjectSpec">
    <PropertyGroup>
      <RandomASM>$(Product)-$([System.DateTime]::UtcNow.ToString('HHmmfff'))</RandomASM>
    </PropertyGroup>

    <Exec Command="git branch --show-current" ConsoleToMSBuild="true" StandardOutputImportance="low">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitBranch" />
    </Exec>

    <Exec Command="git rev-parse --short HEAD" ConsoleToMSBuild="true" StandardOutputImportance="low">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitCommitHash" />
    </Exec>

    <PropertyGroup>
      <Gitag>-$(GitBranch)-$(GitCommitHash)</Gitag>
    </PropertyGroup>

    <Message Text="&gt;&gt; Build id tag is $(Gitag)" Importance="high" />
    <WriteLinesToFile File="$(SolutionDir)Carbon\.gitag" Overwrite="true" Lines="$(Gitag)" />

    <Message Text="&gt;&gt; RandomASM property set to $(RandomASM)" Importance="high" />
    <WriteLinesToFile File="$(SolutionDir)Carbon\.rndasm" Overwrite="true" Lines="$(RandomASM)" />
  </Target>

  <Target Name="CustomAfterBuild" AfterTargets="AfterBuild">
    <Copy SourceFiles="$(OutputPath)$(TargetName).dll" DestinationFiles="$(OutputPath)Carbon.dll" />

    <ItemGroup>
      <FilesToDelete Include="$(OutputPath)*.dll" Exclude="$(OutputPath)Carbon.dll;$(OutputPath)Carbon-*.dll" />
    </ItemGroup>

    <Message Text="&gt;&gt; Cleaning output folder" Importance="high" />
    <Delete Files="@(FilesToDelete)">
      <Output TaskParameter="DeletedFiles" ItemName="FilesDeleted" />
    </Delete>
  </Target>

  <PropertyGroup Condition="Exists('.gitag')">
    <InformationalVersion>$(VersionPrefix)-$(VersionSuffix)$([System.IO.File]::ReadAllText('$(SolutionDir)\Carbon\.gitag').Trim())</InformationalVersion>
  </PropertyGroup>

  <PropertyGroup Condition="Exists('.rndasm') AND $(Configuration.Contains('Debug'))">
    <AssemblyName>$([System.IO.File]::ReadAllText('$(SolutionDir)\Carbon\.rndasm').Trim())</AssemblyName>
  </PropertyGroup>
</Project>